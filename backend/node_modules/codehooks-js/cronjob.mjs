import crontab from 'node-cron';
import cronparser from 'cron-parser';
import execAll from './coderunner.mjs';
import Debug from "debug";
const debug = Debug("codehooks-jobs");


export default function run(cronexpr, theFunc) {
    try {
        // verify cron expression
        cronparser.parseExpression(cronexpr);
        const newtimer = crontab.schedule(cronexpr, async () => {            
            const theContext = {                
                end: function (output) {
                    if (output) console.log(output);
                    return this;
                }                
            };
            debug('tick', cronexpr, theFunc);
            try {
                if (Array.isArray(theFunc)) {
                    await execAll(theFunc, {}, theContext);
                } else {
                    await theFunc({}, theContext);
                }
            } catch (ex) {
                console.log("Cron err", ex.message)
            }
        });
    } catch (ex) {
        console.error("Something is fishy with the cron expression", `'${cronexpr}'`)
        if (argv.debug) console.error(ex.message)
        debug(ex)
        process.exit(1)
    }
}